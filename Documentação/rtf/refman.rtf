{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\info 
{\title {\comment DrawTP  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0 \par
}}DrawTP}
{\comment Gerado porDoxgyen. }
{\creatim \yr2019\mo11\dy28\hr14\min27\sec6}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt DrawTP}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Vers\'E3o 1.0\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Quinta, 28 de Novembro de 2019 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Conte\'FAdo\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice das Estruturas de Dados\par \pard\plain 
{\tc \v \'CDndice das Estruturas de Dados}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Estruturas de Dados\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Aqui est\'E3o as estruturas de dados, uni\'F5es e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b espec_s} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b pixel} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b polygons_p} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ponto} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b reta} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Arquivos\par \pard\plain 
{\tc \v \'CDndice dos Arquivos}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Arquivos\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta \'E9 a lista de todos os arquivos e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b funcoes.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b funcoes.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b structs.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Estruturas{\tc \v Estruturas}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura espec_s\par \pard\plain 
{\tc\tcl2 \v espec_s}
{\xe \v espec_s}
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
\par
{
{\f2 #include <structs.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos de Dados\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b image} [2]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b clear} [3]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b color} [3]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b line} [4]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b circle} [3]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b fill} [2]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rect} [4]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b save} [50]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o Detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha 37 do arquivo structs.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos\par
\pard\plain 
{\xe \v circle\:espec_s}
{\xe \v espec_s\:circle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int circle[3]}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 39 do arquivo structs.h.}\par
}
{\xe \v clear\:espec_s}
{\xe \v espec_s\:clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int clear[3]}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 39 do arquivo structs.h.}\par
}
{\xe \v color\:espec_s}
{\xe \v espec_s\:color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int color[3]}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 39 do arquivo structs.h.}\par
}
{\xe \v fill\:espec_s}
{\xe \v espec_s\:fill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int fill[2]}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 39 do arquivo structs.h.}\par
}
{\xe \v image\:espec_s}
{\xe \v espec_s\:image}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int image[2]}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 39 do arquivo structs.h.}\par
}
{\xe \v line\:espec_s}
{\xe \v espec_s\:line}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int line[4]}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 39 do arquivo structs.h.}\par
}
{\xe \v rect\:espec_s}
{\xe \v espec_s\:rect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int rect[4]}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 39 do arquivo structs.h.}\par
}
{\xe \v save\:espec_s}
{\xe \v espec_s\:save}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char save[50]}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 40 do arquivo structs.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b structs.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura pixel\par \pard\plain 
{\tc\tcl2 \v pixel}
{\xe \v pixel}
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
\par
{
{\f2 #include <structs.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos de Dados\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b red}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b green}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b blue}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o Detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha 19 do arquivo structs.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos\par
\pard\plain 
{\xe \v blue\:pixel}
{\xe \v pixel\:blue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short blue}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 21 do arquivo structs.h.}\par
}
{\xe \v green\:pixel}
{\xe \v pixel\:green}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short green}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 21 do arquivo structs.h.}\par
}
{\xe \v red\:pixel}
{\xe \v pixel\:red}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short red}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 21 do arquivo structs.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b structs.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura polygons_p\par \pard\plain 
{\tc\tcl2 \v polygons_p}
{\xe \v polygons_p}
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
\par
{
{\f2 #include <structs.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos de Dados\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tam}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b y}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o Detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha 30 do arquivo structs.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos\par
\pard\plain 
{\xe \v tam\:polygons_p}
{\xe \v polygons_p\:tam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int tam}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 32 do arquivo structs.h.}\par
}
{\xe \v x\:polygons_p}
{\xe \v polygons_p\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* x}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 33 do arquivo structs.h.}\par
}
{\xe \v y\:polygons_p}
{\xe \v polygons_p\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* y}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 34 do arquivo structs.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b structs.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura ponto\par \pard\plain 
{\tc\tcl2 \v ponto}
{\xe \v ponto}
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\par
{
{\f2 #include <structs.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos de Dados\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b x}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b y}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o Detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha 4 do arquivo structs.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos\par
\pard\plain 
{\xe \v x\:ponto}
{\xe \v ponto\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int x}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 7 do arquivo structs.h.}\par
}
{\xe \v y\:ponto}
{\xe \v ponto\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int y}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 7 do arquivo structs.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b structs.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura reta\par \pard\plain 
{\tc\tcl2 \v reta}
{\xe \v reta}
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
\par
{
{\f2 #include <structs.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos de Dados\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ponto} {\b p1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ponto} {\b p2}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o Detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha 11 do arquivo structs.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos\par
\pard\plain 
{\xe \v p1\:reta}
{\xe \v reta\:p1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ponto} p1}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 14 do arquivo structs.h.}\par
}
{\xe \v p2\:reta}
{\xe \v reta\:p2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ponto} p2}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 15 do arquivo structs.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b structs.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Arquivos{\tc \v Arquivos}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo funcoes.c\par \pard\plain 
{\tc\tcl2 \v funcoes.c}
{\xe \v funcoes.c}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "structs.h"}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FUNCOES_C}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pixel} ** {\b allocar} (int L, int C)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variav\'E9is para armazenar o tamanho da imagem em edi\'E7\'E3o durante a execu\'E7\'E3o do programa. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pixel} {\b color} ({\b pixel} {\b p}, unsigned short r, unsigned short g, unsigned short b)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FUN\'C7\'C3O DE ALOCA\'C7\'C3O DIN\'C2MICA DE M\'C9MORIA: recebe dois inteiros L e C, que ser\'E3o usados como refer\'EAncia para a aloca\'E7\'E3o din\'E2mica de mem\'F3ria em uma matriz. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pixel} ** {\b imagem} (char n[50], int x, int y)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pixel} ** {\b abrir_arquivo} (char w[50])\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cria uma nova "imagem"(array bidimensional), com largura e altura especificadas(x,y). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b linha} ({\b pixel} **{\b p}, {\b reta} r)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7ao que l\'EA e constroi o array pixel ** de acordo com o arquivo .txt: Recebe como par\'E2metor uma srting com o nome do arquivo para abrir e retorna o array pixel **p;. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b save} ({\b pixel} **{\b p}, char n[50])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b polygon} ({\b pixel} **{\b p}, int l, int x[l], int y[l])\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FUN\'C7\'C3O SAVE: Recebe como param\'E2metro uma struct do tipo pixel **, e uma string com o nome do arquivo da imagem. Os dados da matriz de pixel s\'E3o armazenados do arquivo informado. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear} ({\b pixel} **{\b p}, unsigned short r, unsigned short g, unsigned short b)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de Desenho de pol\'EDgonos, recebe uma struct pixel, um inteiro l e dois vetores de inteiro x e y com tamanho l, o inteiro l armaneza a quantidade de pontos do pol\'EDgono e os vetores de inteiro x e y armazem as posi\'E7\'F5es em pixel desses pontos. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b circulo} ({\b pixel} **{\b p}, {\b ponto} c, int r)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A fun\'E7\'E3o clear recebe tr\'EAs inteiros que ser\'E3o usados para setar a cor de todos os pixels da imagem, limpando a imagem. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fill2} ({\b pixel} **{\b p}, int x, int y, {\b pixel} core, {\b pixel} borda)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fill} ({\b pixel} **{\b p}, int x, int y, {\b pixel} core)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o criada com algoritimo de Bresenham, atrav\'E9s dos conhecimentos do pdf disponibilizados pelo professor juntamente com o link adicionado acima. Recebe uma struct do tipo pixel, outra do tipo ponto e um inteiro. O pixel armazena todos os pixel da imagem, o ponto armazena a localiza\'E7\'E3o do pixel do centro do c\'EDrculo e o inteiro r armazena o tamanho do raio do c\'EDrculo. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rect} ({\b pixel} **{\b p}, int y, int x, int L, int A)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b contar_spec} (char n[50])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ler_save} (char n[50], char i_nome[50])\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que conta a quantidade de linhas do arquivo: recebe o nome do arquivo e retorna um inteiro com a quantidade de linhas no arquivo. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b espec} {\b ler_image} (char spc_n[50], char img_n[50])\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para ler o arquivo de especifica\'E7\'E3o e gerar a imagem tal qual escrita no arquivo. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ler_spc} ({\b pixel} **{\b p}, char n[50])\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para ler o nome de um arquivo de imagem .ppm e armazena-lo em uma string para manipula\'E7\'E3o no programa. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dimx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dimy}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pixel} {\b cor}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v FUNCOES_C\:funcoes.c}
{\xe \v funcoes.c\:FUNCOES_C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FUNCOES_C}}
\par
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 2 do arquivo funcoes.c.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v abrir_arquivo\:funcoes.c}
{\xe \v funcoes.c\:abrir_arquivo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pixel}** abrir_arquivo (char  {\i w}[50])}}
\par
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cria uma nova "imagem"(array bidimensional), com largura e altura especificadas(x,y). }}\par
{
Defini\'E7\'E3o na linha 69 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    70 \{ //FUN\'C7\'C3O DE LEITURA DO ARQUIVO DE ESPECIFICA\'C7\'C3O: Recebe como par\'E2metor uma srting com o nome do arquivo, a fun\'E7\'E3o abre o arquivo e armazena seu conte\'FAdo na struct pixel **p;\par
   71     FILE *img = fopen(w, "r");\par
   72     fscanf(img, "P3\\n%d %d\\n255\\n", &dimx, &dimy);\par
   73     pixel **p;\par
   74     p = allocar(dimx, dimy);\par
   75 \par
   76     for (int j = 0; j < dimy; j++)\par
   77     \{\par
   78         for (int i = 0; i < dimx; i++)\par
   79         \{\par
   80             if (i != dimx - 1)\par
   81             \{\par
   82                 fscanf(img, "%hd %hd %hd ", &p[i][j].red, &p[i][j].green, &p[i][j].blue);\par
   83             \}\par
   84             else\par
   85             \{\par
   86                 fscanf(img, "%hd %hd %hd", &p[i][j].red, &p[i][j].green, &p[i][j].blue);\par
   87             \}\par
   88         \}\par
   89         char t;\par
   90         fscanf(img, "%c", &t);\par
   91     \}\par
   92     fclose(img);\par
   93     return p;\par
   94 \}\par
}
}
{\xe \v allocar\:funcoes.c}
{\xe \v funcoes.c\:allocar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pixel}** allocar (int  {\i L}, int  {\i C})}}
\par
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variav\'E9is para armazenar o tamanho da imagem em edi\'E7\'E3o durante a execu\'E7\'E3o do programa. }}\par
{
Defini\'E7\'E3o na linha 12 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    13 \{ // FUN\'C7\'C3O DE ALOCA\'C7\'C3O DIN\'C2MICA DE M\'C9MORIA: recebe dois inteiros L e C, que ser\'E3o usados como refer\'EAncia para a aloca\'E7\'E3o din\'E2mica de mem\'F3ria em uma matriz.\par
   14     int i;\par
   15     pixel **p;\par
   16     p = malloc(L * sizeof(pixel *));\par
   17     for (i = 0; i < L; i++)\par
   18     \{\par
   19         p[i] = calloc(C, sizeof(pixel *));\par
   20     \}\par
   21     return p;\par
   22 \}\par
}
}
{\xe \v circulo\:funcoes.c}
{\xe \v funcoes.c\:circulo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void circulo ({\b pixel} **  {\i p}, {\b ponto}  {\i c}, int  {\i r})}}
\par
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A fun\'E7\'E3o clear recebe tr\'EAs inteiros que ser\'E3o usados para setar a cor de todos os pixels da imagem, limpando a imagem. }}\par
{
Defini\'E7\'E3o na linha 206 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   207 \{ // https://www.geeksforgeeks.org/bresenhams-circle-drawing-algorithm/\par
  208     //Fun\'E7\'E3o criada com algoritimo de Bresenham, atrav\'E9s dos conhecimentos do pdf disponibilizados pelo professor juntamente com o link adicionado acima\par
  209     int xc, yc;\par
  210     xc = c.x;\par
  211     yc = c.y;\par
  212     int x = 0;\par
  213     int y = r;\par
  214     int d = 1 - r;\par
  215     p[xc + x][yc + y] = color(p[xc + x][yc + y], cor.red, cor.green, cor.blue);\par
  216     p[xc - x][yc + y] = color(p[xc - x][yc + y], cor.red, cor.green, cor.blue);\par
  217     p[xc + x][yc - y] = color(p[xc + x][yc - y], cor.red, cor.green, cor.blue);\par
  218     p[xc - x][yc - y] = color(p[xc - x][yc - y], cor.red, cor.green, cor.blue);\par
  219     p[xc + y][yc + x] = color(p[xc + y][yc + x], cor.red, cor.green, cor.blue);\par
  220     p[xc - y][yc + x] = color(p[xc - y][yc + x], cor.red, cor.green, cor.blue);\par
  221     p[xc + y][yc - x] = color(p[xc + y][yc - x], cor.red, cor.green, cor.blue);\par
  222     p[xc - y][yc - x] = color(p[xc - y][yc - x], cor.red, cor.green, cor.blue);\par
  223     while (x <= y)\par
  224     \{\par
  225         x++;\par
  226         if (d < 0)\par
  227         \{\par
  228             d = d + 2 * x + 1;\par
  229         \}\par
  230         else\par
  231         \{\par
  232             y--;\par
  233             d = d + 2 * (x - y) + 1;\par
  234         \}\par
  235         p[xc + x][yc + y] = color(p[xc + x][yc + y], cor.red, cor.green, cor.blue);\par
  236         p[xc - x][yc + y] = color(p[xc - x][yc + y], cor.red, cor.green, cor.blue);\par
  237         p[xc + x][yc - y] = color(p[xc + x][yc - y], cor.red, cor.green, cor.blue);\par
  238         p[xc - x][yc - y] = color(p[xc - x][yc - y], cor.red, cor.green, cor.blue);\par
  239         p[xc + y][yc + x] = color(p[xc + y][yc + x], cor.red, cor.green, cor.blue);\par
  240         p[xc - y][yc + x] = color(p[xc - y][yc + x], cor.red, cor.green, cor.blue);\par
  241         p[xc + y][yc - x] = color(p[xc + y][yc - x], cor.red, cor.green, cor.blue);\par
  242         p[xc - y][yc - x] = color(p[xc - y][yc - x], cor.red, cor.green, cor.blue);\par
  243     \}\par
  244 \}\par
}
}
{\xe \v clear\:funcoes.c}
{\xe \v funcoes.c\:clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void clear ({\b pixel} **  {\i p}, unsigned short  {\i r}, unsigned short  {\i g}, unsigned short  {\i b})}}
\par
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de Desenho de pol\'EDgonos, recebe uma struct pixel, um inteiro l e dois vetores de inteiro x e y com tamanho l, o inteiro l armaneza a quantidade de pontos do pol\'EDgono e os vetores de inteiro x e y armazem as posi\'E7\'F5es em pixel desses pontos. }}\par
{
Defini\'E7\'E3o na linha 195 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   196 \{ //Limpa a imagem setando todos os pixels para uma cor especificada\par
  197     for (int j = 0; j < dimy; j++)\par
  198     \{\par
  199         for (int i = 0; i < dimx; i++)\par
  200         \{\par
  201             p[i][j] = color(p[i][j], r, g, b);\par
  202         \}\par
  203     \}\par
  204 \}\par
}
}
{\xe \v color\:funcoes.c}
{\xe \v funcoes.c\:color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pixel} color ({\b pixel}  {\i p}, unsigned short  {\i r}, unsigned short  {\i g}, unsigned short  {\i b})}}
\par
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FUN\'C7\'C3O DE ALOCA\'C7\'C3O DIN\'C2MICA DE M\'C9MORIA: recebe dois inteiros L e C, que ser\'E3o usados como refer\'EAncia para a aloca\'E7\'E3o din\'E2mica de mem\'F3ria em uma matriz. }}\par
{
Defini\'E7\'E3o na linha 24 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    25 \{\par
   26     p.red = r;\par
   27     p.green = g;\par
   28     p.blue = b;\par
   29     return p;\par
   30 \}\par
}
}
{\xe \v contar_spec\:funcoes.c}
{\xe \v funcoes.c\:contar_spec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int contar_spec (char  {\i n}[50])}}
\par
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 307 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   308 \{ //FUN\'C7\'C3O QUE CONTA A QUANTIDADE DE linha2S DO ARQUIVO\par
  309     int linha2s = 0;\par
  310     char c, f = '\\n';\par
  311     FILE *arq = fopen(n, "r");\par
  312     if (arq == NULL)\par
  313     \{\par
  314         printf("Erro na abertura do arquivo");\par
  315     \}\par
  316     else\par
  317     \{\par
  318         while (fread(&c, sizeof(char), 1, arq))\par
  319         \{\par
  320             if (c == f)\par
  321             \{\par
  322                 linha2s++;\par
  323             \}\par
  324         \}\par
  325         fclose(arq);\par
  326     \}\par
  327 \par
  328     return linha2s;\par
  329 \}\par
}
}
{\xe \v fill\:funcoes.c}
{\xe \v funcoes.c\:fill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fill ({\b pixel} **  {\i p}, int  {\i x}, int  {\i y}, {\b pixel}  {\i core})}}
\par
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o criada com algoritimo de Bresenham, atrav\'E9s dos conhecimentos do pdf disponibilizados pelo professor juntamente com o link adicionado acima. Recebe uma struct do tipo pixel, outra do tipo ponto e um inteiro. O pixel armazena todos os pixel da imagem, o ponto armazena a localiza\'E7\'E3o do pixel do centro do c\'EDrculo e o inteiro r armazena o tamanho do raio do c\'EDrculo. }}\par
{
Defini\'E7\'E3o na linha 264 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   265 \{\par
  266     pixel borda;\par
  267     borda.red = p[x][y].red;\par
  268     borda.blue = p[x][y].blue;\par
  269     borda.green = p[x][y].green;\par
  270     fill2(p, x, y, core, borda);\par
  271 \}\par
}
}
{\xe \v fill2\:funcoes.c}
{\xe \v funcoes.c\:fill2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fill2 ({\b pixel} **  {\i p}, int  {\i x}, int  {\i y}, {\b pixel}  {\i core}, {\b pixel}  {\i borda})}}
\par
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 246 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   247 \{ //https://www.geeksforgeeks.org/boundary-fill-algorithm/\par
  248 \par
  249     if ((p[x][y].red == borda.red) &&\par
  250         (p[x][y].green == borda.green) &&\par
  251         (p[x][y].blue == borda.blue))\par
  252     \{\par
  253         p[x][y] = color(p[x][y], core.red, core.green, core.blue);\par
  254         if (x + 1 < dimx)\par
  255             fill2(p, x + 1, y, core, borda);\par
  256         if (x - 1 >= 0)\par
  257             fill2(p, x - 1, y, core, borda);\par
  258         if (y + 1 < dimy)\par
  259             fill2(p, x, y + 1, core, borda);\par
  260         if (y - 1 >= 0)\par
  261             fill2(p, x, y - 1, core, borda);\par
  262     \}\par
  263 \}\par
}
}
{\xe \v imagem\:funcoes.c}
{\xe \v funcoes.c\:imagem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pixel}** imagem (char  {\i n}[50], int  {\i x}, int  {\i y})}}
\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 32 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    33 \{ //FUN\'C7\'C3O DE CRIA\'C7\'C3O DE IMAGENS: Cria uma nova "imagem", com largura(inteiro x) e altura (inteiro y) especificadas.\par
   34     FILE *fp = fopen(n, "w");\par
   35     dimx = x;\par
   36     dimy = y;\par
   37     pixel **p = allocar(dimx, dimy);\par
   38     cor.red = 255;\par
   39     cor.green = 255;\par
   40     cor.blue = 255;\par
   41     if (fp == NULL)\par
   42     \{\par
   43         printf("Erro na abertura do arquivo");\par
   44     \}\par
   45     else\par
   46     \{\par
   47         fprintf(fp, "P3\\n%d %d\\n255\\n", x, y);\par
   48         for (int j = 0; j < dimy; j++)\par
   49         \{\par
   50             for (int i = 0; i < dimx; i++)\par
   51             \{\par
   52                 p[i][j] = color(p[i][j], cor.red, cor.green, cor.blue);\par
   53                 if (i != dimx - 1)\par
   54                 \{\par
   55                     fprintf(fp, "%d %d %d ", p[i][j].red, p[i][j].green, p[i][j].blue);\par
   56                 \}\par
   57                 else\par
   58                 \{\par
   59                     fprintf(fp, "%d %d %d", p[i][j].red, p[i][j].green, p[i][j].blue);\par
   60                 \}\par
   61             \}\par
   62             fprintf(fp, "\\n");\par
   63         \}\par
   64         fclose(fp);\par
   65     \}\par
   66     return p;\par
   67 \}\par
}
}
{\xe \v ler_image\:funcoes.c}
{\xe \v funcoes.c\:ler_image}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b espec} ler_image (char  {\i spc_n}[50], char  {\i img_n}[50])}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para ler o arquivo de especifica\'E7\'E3o e gerar a imagem tal qual escrita no arquivo. }}\par
{
Defini\'E7\'E3o na linha 366 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   367 \{ // FUN\'C7\'C3O QUE LER O TAMANHO DA IMAGEM E ARMAENZA EM UMA STRUCT\par
  368     espec a;\par
  369     int i;\par
  370     FILE *arq = fopen(spc_n, "r");\par
  371     for (i = 0; i < (contar_spec(spc_n)); i++)\par
  372     \{\par
  373         fscanf(arq, "image %d %d\\n", &a.image[0], &a.image[1]);\par
  374     \}\par
  375     fclose(arq);\par
  376     imagem(img_n, a.image[0], a.image[1]);\par
  377     strcpy(a.save, img_n);\par
  378     return a;\par
  379 \}\par
}
}
{\xe \v ler_save\:funcoes.c}
{\xe \v funcoes.c\:ler_save}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ler_save (char  {\i n}[50], char  {\i i_nome}[50])}}
\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que conta a quantidade de linhas do arquivo: recebe o nome do arquivo e retorna um inteiro com a quantidade de linhas no arquivo. }}\par
{
Defini\'E7\'E3o na linha 331 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   332 \{ //FUN\'C7\'C3O QUE LER O NOME DO ARQUIVO PPM E ARMAZENA EM UMA STRING\par
  333     int i = 0, j = 0;\par
  334     char linha[50];\par
  335     char l_aux[50];\par
  336     char comparador[4];\par
  337     char save_img[50];\par
  338     FILE *arq = fopen(n, "r");\par
  339     if (arq == NULL)\par
  340     \{\par
  341         printf("Erro na abertura do arquivo");\par
  342     \}\par
  343     else\par
  344     \{\par
  345         for (i = 0; i < (contar_spec(n)); i++)\par
  346         \{\par
  347             fgets(linha, 50, arq);\par
  348             strcpy(l_aux, linha);\par
  349             memcpy(comparador, &linha[0], 4);\par
  350             comparador[4] = '\\0';\par
  351             if (strcmp(comparador, "save") == 0)\par
  352             \{\par
  353                 for (i = 0; i < (strlen(l_aux) - 6); i++)\par
  354                 \{\par
  355                     save_img[i] = linha[(i + 5)];\par
  356                     j = i;\par
  357                 \}\par
  358                 save_img[j + 1] = '\\0';\par
  359                 strcpy(i_nome, save_img);\par
  360             \}\par
  361         \}\par
  362         fclose(arq);\par
  363     \}\par
  364 \}\par
}
}
{\xe \v ler_spc\:funcoes.c}
{\xe \v funcoes.c\:ler_spc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ler_spc ({\b pixel} **  {\i p}, char  {\i n}[50])}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para ler o nome de um arquivo de imagem .ppm e armazena-lo em uma string para manipula\'E7\'E3o no programa. }}\par
{
Defini\'E7\'E3o na linha 381 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   382 \{ //FUN\'C7\'C3O PARA LER O ARQUIVO DE ESPECIFICA\'C7\'C3O\par
  383     espec a;\par
  384     ler_save(n, a.save);\par
  385     a = ler_image(n, a.save);\par
  386     int i = 0;\par
  387     char linha2[50];\par
  388     char l_aux[50];\par
  389     char comparador[4];\par
  390     FILE *arq = fopen(n, "r");\par
  391     FILE *aux = fopen("aux.txt", "w");\par
  392     if (aux == NULL)\par
  393     \{\par
  394         printf("Erro na abertura do arquivo");\par
  395         return;\par
  396     \}\par
  397     if (arq == NULL)\par
  398     \{\par
  399         printf("Erro na abertura do arquivo");\par
  400         return;\par
  401     \}\par
  402     else\par
  403     \{\par
  404         p = abrir_arquivo(a.save);\par
  405         for (i = 0; i < (contar_spec(n)); i++)\par
  406         \{\par
  407             fgets(linha2, 50, arq);\par
  408             strcpy(l_aux, linha2);\par
  409             memcpy(comparador, &linha2[0], 4);\par
  410             comparador[4] = '\\0';\par
  411 \par
  412             if (strcmp(comparador, "colo") == 0)\par
  413             \{\par
  414                 fputs(l_aux, aux);\par
  415                 fclose(aux);\par
  416                 FILE *aux = fopen("aux.txt", "r");\par
  417                 fscanf(aux, "color %d %d %d\\n", &a.color[0], &a.color[1], &a.color[2]);\par
  418                 fclose(aux);\par
  419                 aux = fopen("aux.txt", "w");\par
  420                 cor = color(cor, a.color[0], a.color[1], a.color[2]);\par
  421             \}\par
  422             else if (strcmp(comparador, "line") == 0)\par
  423             \{\par
  424                 fputs(l_aux, aux);\par
  425                 fclose(aux);\par
  426                 FILE *aux = fopen("aux.txt", "r");\par
  427                 fscanf(aux, "line %d %d %d %d\\n", &a.line[0], &a.line[1], &a.line[2], &a.line[3]);\par
  428                 fclose(aux);\par
  429                 aux = fopen("aux.txt", "w");\par
  430                 reta r;\par
  431                 r.p1.x = a.line[0];\par
  432                 r.p1.y = a.line[1];\par
  433                 r.p2.x = a.line[2];\par
  434                 r.p2.y = a.line[3];\par
  435                 linha(p, r);\par
  436             \}\par
  437             else if (strcmp(comparador, "poly") == 0)\par
  438             \{\par
  439                 fputs(l_aux, aux);\par
  440                 fclose(aux);\par
  441                 FILE *aux = fopen("aux.txt", "r");\par
  442                 polygons a;\par
  443                 fscanf(aux, "polygon %d ", &a.tam);\par
  444                 a.x = malloc(a.tam * sizeof(int));\par
  445                 a.y = malloc(a.tam * sizeof(int));\par
  446                 for (int t = 0; t < a.tam; t++)\par
  447                 \{\par
  448                     fscanf(aux, "%d ", &a.x[t]);\par
  449                     if (t != a.tam - 1)\par
  450                     \{\par
  451                         fscanf(aux, "%d ", &a.y[t]);\par
  452                     \}\par
  453                     else\par
  454                     \{\par
  455                         fscanf(aux, "%d", &a.y[t]);\par
  456                     \}\par
  457                 \}\par
  458                 fscanf(aux, "\\n");\par
  459                 fclose(aux);\par
  460                 aux = fopen("aux.txt", "w");\par
  461                 polygon(p, a.tam, a.x, a.y);\par
  462                 free(a.x);\par
  463                 free(a.y);\par
  464             \}\par
  465             else if (strcmp(comparador, "circ") == 0)\par
  466             \{\par
  467                 fputs(l_aux, aux);\par
  468                 fclose(aux);\par
  469                 FILE *aux = fopen("aux.txt", "r");\par
  470                 fscanf(aux, "circle %d %d %d\\n", &a.circle[0], &a.circle[1], &a.circle[2]);\par
  471                 fclose(aux);\par
  472                 aux = fopen("aux.txt", "w");\par
  473                 ponto c;\par
  474                 c.x = a.circle[0];\par
  475                 c.y = a.circle[1];\par
  476                 circulo(p, c, a.circle[2]);\par
  477             \}\par
  478             else if (strcmp(comparador, "fill") == 0)\par
  479             \{\par
  480                 fputs(l_aux, aux);\par
  481                 fclose(aux);\par
  482                 FILE *aux = fopen("aux.txt", "r");\par
  483                 fscanf(aux, "fill %d %d\\n", &a.fill[0], &a.fill[1]);\par
  484                 fclose(aux);\par
  485                 aux = fopen("aux.txt", "w");\par
  486                 fill(p, a.fill[0], a.fill[1], cor);\par
  487             \}\par
  488             else if (strcmp(comparador, "rect") == 0)\par
  489             \{\par
  490                 fputs(l_aux, aux);\par
  491                 fclose(aux);\par
  492                 FILE *aux = fopen("aux.txt", "r");\par
  493                 fscanf(aux, "rect %d %d %d %d\\n", &a.rect[0], &a.rect[1], &a.rect[2], &a.rect[3]);\par
  494                 fclose(aux);\par
  495                 aux = fopen("aux.txt", "w");\par
  496                 rect(p, a.rect[0], a.rect[1], a.rect[3], a.rect[2]);\par
  497             \}\par
  498             else if (strcmp(comparador, "clea") == 0)\par
  499             \{\par
  500                 fputs(l_aux, aux);\par
  501                 fclose(aux);\par
  502                 FILE *aux = fopen("aux.txt", "r");\par
  503                 fscanf(aux, "clear %d %d %d\\n", &a.clear[0], &a.clear[1], &a.clear[2]);\par
  504                 fclose(aux);\par
  505                 aux = fopen("aux.txt", "w");\par
  506                 clear(p, a.clear[0], a.clear[1], a.clear[2]);\par
  507             \}\par
  508         \}\par
  509         free(aux);\par
  510         free(arq);\par
  511         save(p, a.save);\par
  512         remove("aux.txt");\par
  513     \}\par
  514 \}\par
}
}
{\xe \v linha\:funcoes.c}
{\xe \v funcoes.c\:linha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void linha ({\b pixel} **  {\i p}, {\b reta}  {\i r})}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7ao que l\'EA e constroi o array pixel ** de acordo com o arquivo .txt: Recebe como par\'E2metor uma srting com o nome do arquivo para abrir e retorna o array pixel **p;. }}\par
{
Defini\'E7\'E3o na linha 96 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    97 \{                                  \par
   98     int dy = abs(r.p2.y - r.p1.y); //Diferen\'E7a entre os pontos y2 e y1\par
   99     int dx = abs(r.p2.x - r.p1.x); //Diferen\'E7a entre os pontos x2 e x1\par
  100     int sx, sy;                    //Variaveis que ser\'E3o utilizadas para armazenar o sinal de x e y\par
  101     int i = r.p1.y;\par
  102     int j = r.p1.x;\par
  103     if (r.p1.x < r.p2.x) // Determinar os sinais de x e y\par
  104     \{\par
  105         sx = 1;\par
  106     \}\par
  107     else\par
  108     \{\par
  109         sx = -1;\par
  110     \}\par
  111     if (r.p1.y < r.p2.y)\par
  112     \{\par
  113         sy = 1;\par
  114     \}\par
  115     else\par
  116     \{\par
  117         sy = -1;\par
  118     \} //fim da determina\'E7\'E3o de sinais\par
  119     int erro;\par
  120     int erroTemp;\par
  121     if (dx > dy) // Defini\'E7\'E3o do erro inicial baseado na maior diferen\'E7a\par
  122     \{\par
  123         erro = dx / 2;\par
  124     \}\par
  125     else\par
  126     \{\par
  127         erro = (-dy) / 2;\par
  128     \}\par
  129     while (true)\par
  130     \{\par
  131         p[i][j] = color(p[i][j], cor.red, cor.green, cor.blue);\par
  132         if ((i == r.p2.y) && (j == r.p2.x))                     // Testa se chegou ao ponto final da reta\par
  133         \{\par
  134             break;\par
  135         \}\par
  136         erroTemp = erro;\par
  137         if (erroTemp > -dx)\par
  138         \{\par
  139             erro -= dy;\par
  140             j += sx;\par
  141         \}\par
  142         if (erroTemp < dy)\par
  143         \{\par
  144             erro += dx;\par
  145             i += sy;\par
  146         \}\par
  147     \}\par
  148 \}\par
}
}
{\xe \v polygon\:funcoes.c}
{\xe \v funcoes.c\:polygon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void polygon ({\b pixel} **  {\i p}, int  {\i l}, int  {\i x}[l], int  {\i y}[l])}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FUN\'C7\'C3O SAVE: Recebe como param\'E2metro uma struct do tipo pixel **, e uma string com o nome do arquivo da imagem. Os dados da matriz de pixel s\'E3o armazenados do arquivo informado. }}\par
{
Defini\'E7\'E3o na linha 179 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   180 \{\par
  181     reta r;\par
  182     for (int i = 1; i < l; i++)\par
  183     \{\par
  184         r.p1.x = x[i - 1];\par
  185         r.p1.y = y[i - 1];\par
  186         r.p2.x = x[i];\par
  187         r.p2.y = y[i];\par
  188         linha(p, r);\par
  189     \}\par
  190     r.p1.x = x[0];\par
  191     r.p1.y = y[0];\par
  192     linha(p, r);\par
  193 \}\par
}
}
{\xe \v rect\:funcoes.c}
{\xe \v funcoes.c\:rect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void rect ({\b pixel} **  {\i p}, int  {\i y}, int  {\i x}, int  {\i L}, int  {\i A})}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 273 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   274 \{ //FUN\'C7\'C3O PARA DESENHAR RET\'C2NGULOS\par
  275 \par
  276     reta r;\par
  277     for (int i = 1; i <= 4; i++)\par
  278     \{\par
  279         if (i == 1 || i == 2)\par
  280         \{\par
  281             r.p1.x = x;\par
  282             r.p1.y = y;\par
  283             r.p2.x = (x + L);\par
  284             r.p2.y = y;\par
  285             linha(p, r);\par
  286             if (i == 1)\par
  287             \{\par
  288                 y = y + A;\par
  289             \}\par
  290             else\par
  291             \{\par
  292                 y = y - A;\par
  293             \}\par
  294         \}\par
  295         else\par
  296         \{\par
  297             r.p1.x = x;\par
  298             r.p1.y = y;\par
  299             r.p2.x = x;\par
  300             r.p2.y = (y + A);\par
  301             linha(p, r);\par
  302             x = x + L;\par
  303         \}\par
  304     \}\par
  305 \}\par
}
}
{\xe \v save\:funcoes.c}
{\xe \v funcoes.c\:save}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void save ({\b pixel} **  {\i p}, char  {\i n}[50])}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 150 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   151 \{\par
  152     FILE *fp = fopen(n, "w");\par
  153     if (fp == NULL)\par
  154     \{\par
  155         printf("Erro na cria\'E7\'E3o do arquivo");\par
  156     \}\par
  157     else\par
  158     \{\par
  159         fprintf(fp, "P3\\n%d %d\\n255\\n", dimx, dimy);\par
  160         for (int j = 0; j < dimy; j++)\par
  161         \{\par
  162             for (int i = 0; i < dimx; i++)\par
  163             \{\par
  164                 if (i != dimx - 1)\par
  165                 \{\par
  166                     fprintf(fp, "%d %d %d ", p[i][j].red, p[i][j].green, p[i][j].blue);\par
  167                 \}\par
  168                 else\par
  169                 \{\par
  170                     fprintf(fp, "%d %d %d", p[i][j].red, p[i][j].green, p[i][j].blue);\par
  171                 \}\par
  172             \}\par
  173             fprintf(fp, "\\n");\par
  174         \}\par
  175         fclose(fp);\par
  176     \}\par
  177 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v cor\:funcoes.c}
{\xe \v funcoes.c\:cor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pixel} cor}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 10 do arquivo funcoes.c.}\par
}
{\xe \v dimx\:funcoes.c}
{\xe \v funcoes.c\:dimx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dimx}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 8 do arquivo funcoes.c.}\par
}
{\xe \v dimy\:funcoes.c}
{\xe \v funcoes.c\:dimy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dimy}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 9 do arquivo funcoes.c.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo funcoes.h\par \pard\plain 
{\tc\tcl2 \v funcoes.h}
{\xe \v funcoes.h}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "structs.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pixel} ** {\b allocar} (int L, int C)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variav\'E9is para armazenar o tamanho da imagem em edi\'E7\'E3o durante a execu\'E7\'E3o do programa. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pixel} {\b color} ({\b pixel} {\b p}, unsigned short r, unsigned short g, unsigned short b)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FUN\'C7\'C3O DE ALOCA\'C7\'C3O DIN\'C2MICA DE M\'C9MORIA: recebe dois inteiros L e C, que ser\'E3o usados como refer\'EAncia para a aloca\'E7\'E3o din\'E2mica de mem\'F3ria em uma matriz. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pixel} ** {\b imagem} (int x, int y)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Recebe um pixel e 3 valores(RGB 0-255) e retorna o pixel recebico com a nova cor passada. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pixel} ** {\b abrir_arquivo} (char w[50])\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cria uma nova "imagem"(array bidimensional), com largura e altura especificadas(x,y). }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b linha} ({\b pixel} **{\b p}, {\b reta} r)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7ao que l\'EA e constroi o array pixel ** de acordo com o arquivo .txt: Recebe como par\'E2metor uma srting com o nome do arquivo para abrir e retorna o array pixel **p;. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b save} ({\b pixel} **{\b p})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de desenhos de linhas, recebe duas structs como argumento, pixel e reta, a primeira armazena o vertor de desenho da imagem e a segunda armazena quatro inteiros, sendo que cada par de inteiro repressenta uma posi\'E7\'E3o em pixel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b polygon} ({\b pixel} **{\b p}, int l, int x[l], int y[l])\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FUN\'C7\'C3O SAVE: Recebe como param\'E2metro uma struct do tipo pixel **, e uma string com o nome do arquivo da imagem. Os dados da matriz de pixel s\'E3o armazenados do arquivo informado. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear} ({\b pixel} **{\b p}, unsigned short r, unsigned short g, unsigned short b)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de Desenho de pol\'EDgonos, recebe uma struct pixel, um inteiro l e dois vetores de inteiro x e y com tamanho l, o inteiro l armaneza a quantidade de pontos do pol\'EDgono e os vetores de inteiro x e y armazem as posi\'E7\'F5es em pixel desses pontos. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b circulo} ({\b pixel} **{\b p}, {\b ponto} c, int r)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A fun\'E7\'E3o clear recebe tr\'EAs inteiros que ser\'E3o usados para setar a cor de todos os pixels da imagem, limpando a imagem. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fill} ({\b pixel} **{\b p}, int x, int y, {\b pixel} {\b cor})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o criada com algoritimo de Bresenham, atrav\'E9s dos conhecimentos do pdf disponibilizados pelo professor juntamente com o link adicionado acima. Recebe uma struct do tipo pixel, outra do tipo ponto e um inteiro. O pixel armazena todos os pixel da imagem, o ponto armazena a localiza\'E7\'E3o do pixel do centro do c\'EDrculo e o inteiro r armazena o tamanho do raio do c\'EDrculo. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fill2} ({\b pixel} **{\b p}, int x, int y, {\b pixel} core, {\b pixel} borda)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b react} ({\b pixel} **{\b p}, int x, int y, int A, int L)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o auxiliar da fill que inicializa os valores de pixel borda. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b contar_spec} (char n[50])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ler_save} (char n[50], char i_nome[50])\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que conta a quantidade de linhas do arquivo: recebe o nome do arquivo e retorna um inteiro com a quantidade de linhas no arquivo. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ler_spc} ({\b pixel} **{\b p}, char n[50])\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para ler o nome de um arquivo de imagem .ppm e armazena-lo em uma string para manipula\'E7\'E3o no programa. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b espec} {\b ler_image} (char spc_n[50], char img_n[50])\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para ler o arquivo de especifica\'E7\'E3o e gerar a imagem tal qual escrita no arquivo. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dimx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dimy}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v abrir_arquivo\:funcoes.h}
{\xe \v funcoes.h\:abrir_arquivo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pixel}** abrir_arquivo (char  {\i w}[50])}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cria uma nova "imagem"(array bidimensional), com largura e altura especificadas(x,y). }}\par
{
Defini\'E7\'E3o na linha 69 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    70 \{ //FUN\'C7\'C3O DE LEITURA DO ARQUIVO DE ESPECIFICA\'C7\'C3O: Recebe como par\'E2metor uma srting com o nome do arquivo, a fun\'E7\'E3o abre o arquivo e armazena seu conte\'FAdo na struct pixel **p;\par
   71     FILE *img = fopen(w, "r");\par
   72     fscanf(img, "P3\\n%d %d\\n255\\n", &dimx, &dimy);\par
   73     pixel **p;\par
   74     p = allocar(dimx, dimy);\par
   75 \par
   76     for (int j = 0; j < dimy; j++)\par
   77     \{\par
   78         for (int i = 0; i < dimx; i++)\par
   79         \{\par
   80             if (i != dimx - 1)\par
   81             \{\par
   82                 fscanf(img, "%hd %hd %hd ", &p[i][j].red, &p[i][j].green, &p[i][j].blue);\par
   83             \}\par
   84             else\par
   85             \{\par
   86                 fscanf(img, "%hd %hd %hd", &p[i][j].red, &p[i][j].green, &p[i][j].blue);\par
   87             \}\par
   88         \}\par
   89         char t;\par
   90         fscanf(img, "%c", &t);\par
   91     \}\par
   92     fclose(img);\par
   93     return p;\par
   94 \}\par
}
}
{\xe \v allocar\:funcoes.h}
{\xe \v funcoes.h\:allocar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pixel}** allocar (int  {\i L}, int  {\i C})}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variav\'E9is para armazenar o tamanho da imagem em edi\'E7\'E3o durante a execu\'E7\'E3o do programa. }}\par
{
Defini\'E7\'E3o na linha 12 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    13 \{ // FUN\'C7\'C3O DE ALOCA\'C7\'C3O DIN\'C2MICA DE M\'C9MORIA: recebe dois inteiros L e C, que ser\'E3o usados como refer\'EAncia para a aloca\'E7\'E3o din\'E2mica de mem\'F3ria em uma matriz.\par
   14     int i;\par
   15     pixel **p;\par
   16     p = malloc(L * sizeof(pixel *));\par
   17     for (i = 0; i < L; i++)\par
   18     \{\par
   19         p[i] = calloc(C, sizeof(pixel *));\par
   20     \}\par
   21     return p;\par
   22 \}\par
}
}
{\xe \v circulo\:funcoes.h}
{\xe \v funcoes.h\:circulo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void circulo ({\b pixel} **  {\i p}, {\b ponto}  {\i c}, int  {\i r})}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A fun\'E7\'E3o clear recebe tr\'EAs inteiros que ser\'E3o usados para setar a cor de todos os pixels da imagem, limpando a imagem. }}\par
{
Defini\'E7\'E3o na linha 206 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   207 \{ // https://www.geeksforgeeks.org/bresenhams-circle-drawing-algorithm/\par
  208     //Fun\'E7\'E3o criada com algoritimo de Bresenham, atrav\'E9s dos conhecimentos do pdf disponibilizados pelo professor juntamente com o link adicionado acima\par
  209     int xc, yc;\par
  210     xc = c.x;\par
  211     yc = c.y;\par
  212     int x = 0;\par
  213     int y = r;\par
  214     int d = 1 - r;\par
  215     p[xc + x][yc + y] = color(p[xc + x][yc + y], cor.red, cor.green, cor.blue);\par
  216     p[xc - x][yc + y] = color(p[xc - x][yc + y], cor.red, cor.green, cor.blue);\par
  217     p[xc + x][yc - y] = color(p[xc + x][yc - y], cor.red, cor.green, cor.blue);\par
  218     p[xc - x][yc - y] = color(p[xc - x][yc - y], cor.red, cor.green, cor.blue);\par
  219     p[xc + y][yc + x] = color(p[xc + y][yc + x], cor.red, cor.green, cor.blue);\par
  220     p[xc - y][yc + x] = color(p[xc - y][yc + x], cor.red, cor.green, cor.blue);\par
  221     p[xc + y][yc - x] = color(p[xc + y][yc - x], cor.red, cor.green, cor.blue);\par
  222     p[xc - y][yc - x] = color(p[xc - y][yc - x], cor.red, cor.green, cor.blue);\par
  223     while (x <= y)\par
  224     \{\par
  225         x++;\par
  226         if (d < 0)\par
  227         \{\par
  228             d = d + 2 * x + 1;\par
  229         \}\par
  230         else\par
  231         \{\par
  232             y--;\par
  233             d = d + 2 * (x - y) + 1;\par
  234         \}\par
  235         p[xc + x][yc + y] = color(p[xc + x][yc + y], cor.red, cor.green, cor.blue);\par
  236         p[xc - x][yc + y] = color(p[xc - x][yc + y], cor.red, cor.green, cor.blue);\par
  237         p[xc + x][yc - y] = color(p[xc + x][yc - y], cor.red, cor.green, cor.blue);\par
  238         p[xc - x][yc - y] = color(p[xc - x][yc - y], cor.red, cor.green, cor.blue);\par
  239         p[xc + y][yc + x] = color(p[xc + y][yc + x], cor.red, cor.green, cor.blue);\par
  240         p[xc - y][yc + x] = color(p[xc - y][yc + x], cor.red, cor.green, cor.blue);\par
  241         p[xc + y][yc - x] = color(p[xc + y][yc - x], cor.red, cor.green, cor.blue);\par
  242         p[xc - y][yc - x] = color(p[xc - y][yc - x], cor.red, cor.green, cor.blue);\par
  243     \}\par
  244 \}\par
}
}
{\xe \v clear\:funcoes.h}
{\xe \v funcoes.h\:clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void clear ({\b pixel} **  {\i p}, unsigned short  {\i r}, unsigned short  {\i g}, unsigned short  {\i b})}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de Desenho de pol\'EDgonos, recebe uma struct pixel, um inteiro l e dois vetores de inteiro x e y com tamanho l, o inteiro l armaneza a quantidade de pontos do pol\'EDgono e os vetores de inteiro x e y armazem as posi\'E7\'F5es em pixel desses pontos. }}\par
{
Defini\'E7\'E3o na linha 195 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   196 \{ //Limpa a imagem setando todos os pixels para uma cor especificada\par
  197     for (int j = 0; j < dimy; j++)\par
  198     \{\par
  199         for (int i = 0; i < dimx; i++)\par
  200         \{\par
  201             p[i][j] = color(p[i][j], r, g, b);\par
  202         \}\par
  203     \}\par
  204 \}\par
}
}
{\xe \v color\:funcoes.h}
{\xe \v funcoes.h\:color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pixel} color ({\b pixel}  {\i p}, unsigned short  {\i r}, unsigned short  {\i g}, unsigned short  {\i b})}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FUN\'C7\'C3O DE ALOCA\'C7\'C3O DIN\'C2MICA DE M\'C9MORIA: recebe dois inteiros L e C, que ser\'E3o usados como refer\'EAncia para a aloca\'E7\'E3o din\'E2mica de mem\'F3ria em uma matriz. }}\par
{
Defini\'E7\'E3o na linha 24 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    25 \{\par
   26     p.red = r;\par
   27     p.green = g;\par
   28     p.blue = b;\par
   29     return p;\par
   30 \}\par
}
}
{\xe \v contar_spec\:funcoes.h}
{\xe \v funcoes.h\:contar_spec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int contar_spec (char  {\i n}[50])}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 307 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   308 \{ //FUN\'C7\'C3O QUE CONTA A QUANTIDADE DE linha2S DO ARQUIVO\par
  309     int linha2s = 0;\par
  310     char c, f = '\\n';\par
  311     FILE *arq = fopen(n, "r");\par
  312     if (arq == NULL)\par
  313     \{\par
  314         printf("Erro na abertura do arquivo");\par
  315     \}\par
  316     else\par
  317     \{\par
  318         while (fread(&c, sizeof(char), 1, arq))\par
  319         \{\par
  320             if (c == f)\par
  321             \{\par
  322                 linha2s++;\par
  323             \}\par
  324         \}\par
  325         fclose(arq);\par
  326     \}\par
  327 \par
  328     return linha2s;\par
  329 \}\par
}
}
{\xe \v fill\:funcoes.h}
{\xe \v funcoes.h\:fill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fill ({\b pixel} **  {\i p}, int  {\i x}, int  {\i y}, {\b pixel}  {\i cor})}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o criada com algoritimo de Bresenham, atrav\'E9s dos conhecimentos do pdf disponibilizados pelo professor juntamente com o link adicionado acima. Recebe uma struct do tipo pixel, outra do tipo ponto e um inteiro. O pixel armazena todos os pixel da imagem, o ponto armazena a localiza\'E7\'E3o do pixel do centro do c\'EDrculo e o inteiro r armazena o tamanho do raio do c\'EDrculo. }}\par
{
Defini\'E7\'E3o na linha 264 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   265 \{\par
  266     pixel borda;\par
  267     borda.red = p[x][y].red;\par
  268     borda.blue = p[x][y].blue;\par
  269     borda.green = p[x][y].green;\par
  270     fill2(p, x, y, core, borda);\par
  271 \}\par
}
}
{\xe \v fill2\:funcoes.h}
{\xe \v funcoes.h\:fill2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fill2 ({\b pixel} **  {\i p}, int  {\i x}, int  {\i y}, {\b pixel}  {\i core}, {\b pixel}  {\i borda})}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 246 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   247 \{ //https://www.geeksforgeeks.org/boundary-fill-algorithm/\par
  248 \par
  249     if ((p[x][y].red == borda.red) &&\par
  250         (p[x][y].green == borda.green) &&\par
  251         (p[x][y].blue == borda.blue))\par
  252     \{\par
  253         p[x][y] = color(p[x][y], core.red, core.green, core.blue);\par
  254         if (x + 1 < dimx)\par
  255             fill2(p, x + 1, y, core, borda);\par
  256         if (x - 1 >= 0)\par
  257             fill2(p, x - 1, y, core, borda);\par
  258         if (y + 1 < dimy)\par
  259             fill2(p, x, y + 1, core, borda);\par
  260         if (y - 1 >= 0)\par
  261             fill2(p, x, y - 1, core, borda);\par
  262     \}\par
  263 \}\par
}
}
{\xe \v imagem\:funcoes.h}
{\xe \v funcoes.h\:imagem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pixel}** imagem (int  {\i x}, int  {\i y})}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Recebe um pixel e 3 valores(RGB 0-255) e retorna o pixel recebico com a nova cor passada. }}\par
}
{\xe \v ler_image\:funcoes.h}
{\xe \v funcoes.h\:ler_image}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b espec} ler_image (char  {\i spc_n}[50], char  {\i img_n}[50])}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para ler o arquivo de especifica\'E7\'E3o e gerar a imagem tal qual escrita no arquivo. }}\par
{
Defini\'E7\'E3o na linha 366 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   367 \{ // FUN\'C7\'C3O QUE LER O TAMANHO DA IMAGEM E ARMAENZA EM UMA STRUCT\par
  368     espec a;\par
  369     int i;\par
  370     FILE *arq = fopen(spc_n, "r");\par
  371     for (i = 0; i < (contar_spec(spc_n)); i++)\par
  372     \{\par
  373         fscanf(arq, "image %d %d\\n", &a.image[0], &a.image[1]);\par
  374     \}\par
  375     fclose(arq);\par
  376     imagem(img_n, a.image[0], a.image[1]);\par
  377     strcpy(a.save, img_n);\par
  378     return a;\par
  379 \}\par
}
}
{\xe \v ler_save\:funcoes.h}
{\xe \v funcoes.h\:ler_save}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ler_save (char  {\i n}[50], char  {\i i_nome}[50])}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que conta a quantidade de linhas do arquivo: recebe o nome do arquivo e retorna um inteiro com a quantidade de linhas no arquivo. }}\par
{
Defini\'E7\'E3o na linha 331 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   332 \{ //FUN\'C7\'C3O QUE LER O NOME DO ARQUIVO PPM E ARMAZENA EM UMA STRING\par
  333     int i = 0, j = 0;\par
  334     char linha[50];\par
  335     char l_aux[50];\par
  336     char comparador[4];\par
  337     char save_img[50];\par
  338     FILE *arq = fopen(n, "r");\par
  339     if (arq == NULL)\par
  340     \{\par
  341         printf("Erro na abertura do arquivo");\par
  342     \}\par
  343     else\par
  344     \{\par
  345         for (i = 0; i < (contar_spec(n)); i++)\par
  346         \{\par
  347             fgets(linha, 50, arq);\par
  348             strcpy(l_aux, linha);\par
  349             memcpy(comparador, &linha[0], 4);\par
  350             comparador[4] = '\\0';\par
  351             if (strcmp(comparador, "save") == 0)\par
  352             \{\par
  353                 for (i = 0; i < (strlen(l_aux) - 6); i++)\par
  354                 \{\par
  355                     save_img[i] = linha[(i + 5)];\par
  356                     j = i;\par
  357                 \}\par
  358                 save_img[j + 1] = '\\0';\par
  359                 strcpy(i_nome, save_img);\par
  360             \}\par
  361         \}\par
  362         fclose(arq);\par
  363     \}\par
  364 \}\par
}
}
{\xe \v ler_spc\:funcoes.h}
{\xe \v funcoes.h\:ler_spc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ler_spc ({\b pixel} **  {\i p}, char  {\i n}[50])}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para ler o nome de um arquivo de imagem .ppm e armazena-lo em uma string para manipula\'E7\'E3o no programa. }}\par
{
Defini\'E7\'E3o na linha 381 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   382 \{ //FUN\'C7\'C3O PARA LER O ARQUIVO DE ESPECIFICA\'C7\'C3O\par
  383     espec a;\par
  384     ler_save(n, a.save);\par
  385     a = ler_image(n, a.save);\par
  386     int i = 0;\par
  387     char linha2[50];\par
  388     char l_aux[50];\par
  389     char comparador[4];\par
  390     FILE *arq = fopen(n, "r");\par
  391     FILE *aux = fopen("aux.txt", "w");\par
  392     if (aux == NULL)\par
  393     \{\par
  394         printf("Erro na abertura do arquivo");\par
  395         return;\par
  396     \}\par
  397     if (arq == NULL)\par
  398     \{\par
  399         printf("Erro na abertura do arquivo");\par
  400         return;\par
  401     \}\par
  402     else\par
  403     \{\par
  404         p = abrir_arquivo(a.save);\par
  405         for (i = 0; i < (contar_spec(n)); i++)\par
  406         \{\par
  407             fgets(linha2, 50, arq);\par
  408             strcpy(l_aux, linha2);\par
  409             memcpy(comparador, &linha2[0], 4);\par
  410             comparador[4] = '\\0';\par
  411 \par
  412             if (strcmp(comparador, "colo") == 0)\par
  413             \{\par
  414                 fputs(l_aux, aux);\par
  415                 fclose(aux);\par
  416                 FILE *aux = fopen("aux.txt", "r");\par
  417                 fscanf(aux, "color %d %d %d\\n", &a.color[0], &a.color[1], &a.color[2]);\par
  418                 fclose(aux);\par
  419                 aux = fopen("aux.txt", "w");\par
  420                 cor = color(cor, a.color[0], a.color[1], a.color[2]);\par
  421             \}\par
  422             else if (strcmp(comparador, "line") == 0)\par
  423             \{\par
  424                 fputs(l_aux, aux);\par
  425                 fclose(aux);\par
  426                 FILE *aux = fopen("aux.txt", "r");\par
  427                 fscanf(aux, "line %d %d %d %d\\n", &a.line[0], &a.line[1], &a.line[2], &a.line[3]);\par
  428                 fclose(aux);\par
  429                 aux = fopen("aux.txt", "w");\par
  430                 reta r;\par
  431                 r.p1.x = a.line[0];\par
  432                 r.p1.y = a.line[1];\par
  433                 r.p2.x = a.line[2];\par
  434                 r.p2.y = a.line[3];\par
  435                 linha(p, r);\par
  436             \}\par
  437             else if (strcmp(comparador, "poly") == 0)\par
  438             \{\par
  439                 fputs(l_aux, aux);\par
  440                 fclose(aux);\par
  441                 FILE *aux = fopen("aux.txt", "r");\par
  442                 polygons a;\par
  443                 fscanf(aux, "polygon %d ", &a.tam);\par
  444                 a.x = malloc(a.tam * sizeof(int));\par
  445                 a.y = malloc(a.tam * sizeof(int));\par
  446                 for (int t = 0; t < a.tam; t++)\par
  447                 \{\par
  448                     fscanf(aux, "%d ", &a.x[t]);\par
  449                     if (t != a.tam - 1)\par
  450                     \{\par
  451                         fscanf(aux, "%d ", &a.y[t]);\par
  452                     \}\par
  453                     else\par
  454                     \{\par
  455                         fscanf(aux, "%d", &a.y[t]);\par
  456                     \}\par
  457                 \}\par
  458                 fscanf(aux, "\\n");\par
  459                 fclose(aux);\par
  460                 aux = fopen("aux.txt", "w");\par
  461                 polygon(p, a.tam, a.x, a.y);\par
  462                 free(a.x);\par
  463                 free(a.y);\par
  464             \}\par
  465             else if (strcmp(comparador, "circ") == 0)\par
  466             \{\par
  467                 fputs(l_aux, aux);\par
  468                 fclose(aux);\par
  469                 FILE *aux = fopen("aux.txt", "r");\par
  470                 fscanf(aux, "circle %d %d %d\\n", &a.circle[0], &a.circle[1], &a.circle[2]);\par
  471                 fclose(aux);\par
  472                 aux = fopen("aux.txt", "w");\par
  473                 ponto c;\par
  474                 c.x = a.circle[0];\par
  475                 c.y = a.circle[1];\par
  476                 circulo(p, c, a.circle[2]);\par
  477             \}\par
  478             else if (strcmp(comparador, "fill") == 0)\par
  479             \{\par
  480                 fputs(l_aux, aux);\par
  481                 fclose(aux);\par
  482                 FILE *aux = fopen("aux.txt", "r");\par
  483                 fscanf(aux, "fill %d %d\\n", &a.fill[0], &a.fill[1]);\par
  484                 fclose(aux);\par
  485                 aux = fopen("aux.txt", "w");\par
  486                 fill(p, a.fill[0], a.fill[1], cor);\par
  487             \}\par
  488             else if (strcmp(comparador, "rect") == 0)\par
  489             \{\par
  490                 fputs(l_aux, aux);\par
  491                 fclose(aux);\par
  492                 FILE *aux = fopen("aux.txt", "r");\par
  493                 fscanf(aux, "rect %d %d %d %d\\n", &a.rect[0], &a.rect[1], &a.rect[2], &a.rect[3]);\par
  494                 fclose(aux);\par
  495                 aux = fopen("aux.txt", "w");\par
  496                 rect(p, a.rect[0], a.rect[1], a.rect[3], a.rect[2]);\par
  497             \}\par
  498             else if (strcmp(comparador, "clea") == 0)\par
  499             \{\par
  500                 fputs(l_aux, aux);\par
  501                 fclose(aux);\par
  502                 FILE *aux = fopen("aux.txt", "r");\par
  503                 fscanf(aux, "clear %d %d %d\\n", &a.clear[0], &a.clear[1], &a.clear[2]);\par
  504                 fclose(aux);\par
  505                 aux = fopen("aux.txt", "w");\par
  506                 clear(p, a.clear[0], a.clear[1], a.clear[2]);\par
  507             \}\par
  508         \}\par
  509         free(aux);\par
  510         free(arq);\par
  511         save(p, a.save);\par
  512         remove("aux.txt");\par
  513     \}\par
  514 \}\par
}
}
{\xe \v linha\:funcoes.h}
{\xe \v funcoes.h\:linha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void linha ({\b pixel} **  {\i p}, {\b reta}  {\i r})}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7ao que l\'EA e constroi o array pixel ** de acordo com o arquivo .txt: Recebe como par\'E2metor uma srting com o nome do arquivo para abrir e retorna o array pixel **p;. }}\par
{
Defini\'E7\'E3o na linha 96 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    97 \{                                  \par
   98     int dy = abs(r.p2.y - r.p1.y); //Diferen\'E7a entre os pontos y2 e y1\par
   99     int dx = abs(r.p2.x - r.p1.x); //Diferen\'E7a entre os pontos x2 e x1\par
  100     int sx, sy;                    //Variaveis que ser\'E3o utilizadas para armazenar o sinal de x e y\par
  101     int i = r.p1.y;\par
  102     int j = r.p1.x;\par
  103     if (r.p1.x < r.p2.x) // Determinar os sinais de x e y\par
  104     \{\par
  105         sx = 1;\par
  106     \}\par
  107     else\par
  108     \{\par
  109         sx = -1;\par
  110     \}\par
  111     if (r.p1.y < r.p2.y)\par
  112     \{\par
  113         sy = 1;\par
  114     \}\par
  115     else\par
  116     \{\par
  117         sy = -1;\par
  118     \} //fim da determina\'E7\'E3o de sinais\par
  119     int erro;\par
  120     int erroTemp;\par
  121     if (dx > dy) // Defini\'E7\'E3o do erro inicial baseado na maior diferen\'E7a\par
  122     \{\par
  123         erro = dx / 2;\par
  124     \}\par
  125     else\par
  126     \{\par
  127         erro = (-dy) / 2;\par
  128     \}\par
  129     while (true)\par
  130     \{\par
  131         p[i][j] = color(p[i][j], cor.red, cor.green, cor.blue);\par
  132         if ((i == r.p2.y) && (j == r.p2.x))                     // Testa se chegou ao ponto final da reta\par
  133         \{\par
  134             break;\par
  135         \}\par
  136         erroTemp = erro;\par
  137         if (erroTemp > -dx)\par
  138         \{\par
  139             erro -= dy;\par
  140             j += sx;\par
  141         \}\par
  142         if (erroTemp < dy)\par
  143         \{\par
  144             erro += dx;\par
  145             i += sy;\par
  146         \}\par
  147     \}\par
  148 \}\par
}
}
{\xe \v polygon\:funcoes.h}
{\xe \v funcoes.h\:polygon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void polygon ({\b pixel} **  {\i p}, int  {\i l}, int  {\i x}[l], int  {\i y}[l])}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
FUN\'C7\'C3O SAVE: Recebe como param\'E2metro uma struct do tipo pixel **, e uma string com o nome do arquivo da imagem. Os dados da matriz de pixel s\'E3o armazenados do arquivo informado. }}\par
{
Defini\'E7\'E3o na linha 179 do arquivo funcoes.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   180 \{\par
  181     reta r;\par
  182     for (int i = 1; i < l; i++)\par
  183     \{\par
  184         r.p1.x = x[i - 1];\par
  185         r.p1.y = y[i - 1];\par
  186         r.p2.x = x[i];\par
  187         r.p2.y = y[i];\par
  188         linha(p, r);\par
  189     \}\par
  190     r.p1.x = x[0];\par
  191     r.p1.y = y[0];\par
  192     linha(p, r);\par
  193 \}\par
}
}
{\xe \v react\:funcoes.h}
{\xe \v funcoes.h\:react}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void react ({\b pixel} **  {\i p}, int  {\i x}, int  {\i y}, int  {\i A}, int  {\i L})}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o auxiliar da fill que inicializa os valores de pixel borda. }}\par
}
{\xe \v save\:funcoes.h}
{\xe \v funcoes.h\:save}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void save ({\b pixel} **  {\i p})}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de desenhos de linhas, recebe duas structs como argumento, pixel e reta, a primeira armazena o vertor de desenho da imagem e a segunda armazena quatro inteiros, sendo que cada par de inteiro repressenta uma posi\'E7\'E3o em pixel. }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v dimx\:funcoes.h}
{\xe \v funcoes.h\:dimx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dimx}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 5 do arquivo funcoes.h.}\par
}
{\xe \v dimy\:funcoes.h}
{\xe \v funcoes.h\:dimy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dimy}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 5 do arquivo funcoes.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo main.c\par \pard\plain 
{\tc\tcl2 \v main.c}
{\xe \v main.c}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <gtk/gtk.h>}\par
{\f2 #include "structs.h"}\par
{\f2 #include "funcoes.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b get_espec} (int t, char n[50], char str[t *50])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GtkWidget * {\b window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GtkWidget * {\b image}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GtkWidget * {\b button}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GtkWidget * {\b grid}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GtkWidget * {\b frame}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GtkWidget * {\b box}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GtkWidget * {\b txt_view}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GtkWidget * {\b scrolled_window}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GtkWidget * {\b entry}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GtkWidget * {\b label}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const gchar * {\b entry_text}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
gchar * {\b v_texto}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GtkTextBuffer * {\b buffer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GtkTextIter {\b start}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GtkTextIter {\b end}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GtkTextIter {\b iter}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b nome_espec} [50]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b nome_image} [50] ="imagem.ppm"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pixel} ** {\b p}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v get_espec\:main.c}
{\xe \v main.c\:get_espec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void get_espec (int  {\i t}, char  {\i n}[50], char  {\i str}[t *50])}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 20 do arquivo main.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    21 \{\par
   22 \par
   23     int i = 0;\par
   24     char linha[50];\par
   25     FILE *arq = fopen(n, "r");\par
   26     if (arq == NULL)\par
   27     \{\par
   28         printf("Erro na abertura do arquivo");\par
   29     \}\par
   30     else\par
   31     \{\par
   32         for (i = 0; i < t; i++)\par
   33         \{\par
   34             fgets(linha, 50, arq);\par
   35             strcat(str, linha);\par
   36         \}\par
   37         fclose(arq);\par
   38     \}\par
   39 \}\par
}
}
{\xe \v main\:main.c}
{\xe \v main.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 88 do arquivo main.c.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    89 \{\par
   90     gtk_init(&argc, &argv);\par
   91 \par
   92     window = gtk_window_new(GTK_WINDOW_TOPLEVEL);\par
   93     gtk_window_set_position(GTK_WINDOW(window), GTK_WIN_POS_CENTER);\par
   94     gtk_window_set_default_size(GTK_WINDOW(window), 800, 600);\par
   95     gtk_container_set_border_width(GTK_CONTAINER(window), 20);\par
   96     gtk_window_set_title(GTK_WINDOW(window), "DrawTP");\par
   97 \par
   98     g_signal_connect(G_OBJECT(window), "destroy", G_CALLBACK(destroy), NULL);\par
   99 \par
  100     image = gtk_image_new_from_file(nome_image);\par
  101     button = gtk_button_new_with_label("Ler");\par
  102     grid = gtk_grid_new();\par
  103     entry = gtk_entry_new();\par
  104     label = gtk_label_new("   ARQUIVO DE \\nESPECIFICA\'C7\'C3O: ");\par
  105     gtk_entry_set_max_length(GTK_ENTRY(entry), 49);\par
  106 \par
  107     gtk_entry_set_text(GTK_ENTRY(entry), nome_espec);\par
  108 \par
  109     buffer = gtk_text_buffer_new(NULL);\par
  110 \par
  111     txt_view = gtk_text_view_new_with_buffer(buffer);\par
  112     gtk_text_view_set_wrap_mode(GTK_TEXT_VIEW(txt_view), GTK_WRAP_WORD);\par
  113     scrolled_window = gtk_scrolled_window_new(NULL, NULL);\par
  114     gtk_scrolled_window_set_policy(GTK_SCROLLED_WINDOW(scrolled_window), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);\par
  115     gtk_scrolled_window_set_min_content_height(GTK_SCROLLED_WINDOW(scrolled_window), 500);\par
  116     gtk_scrolled_window_set_min_content_width(GTK_SCROLLED_WINDOW(scrolled_window), 400);\par
  117     gtk_container_add(GTK_CONTAINER(scrolled_window), txt_view);\par
  118     gtk_container_set_border_width(GTK_CONTAINER(scrolled_window), 5);\par
  119 \par
  120     g_signal_connect(button, "clicked", G_CALLBACK(button_clicked), NULL);\par
  121 \par
  122     gtk_grid_attach(GTK_GRID(grid), scrolled_window, 0, 0, 3, 1);\par
  123     gtk_grid_attach(GTK_GRID(grid), label, 0, 2, 1, 1);\par
  124     gtk_grid_attach(GTK_GRID(grid), entry, 1, 2, 1, 1);\par
  125     gtk_grid_attach(GTK_GRID(grid), button, 2, 2, 1, 1);\par
  126     button = gtk_button_new_with_label("SALVAR");\par
  127     g_signal_connect(button, "clicked", G_CALLBACK(button_salvar), NULL);\par
  128     gtk_grid_attach(GTK_GRID(grid), button, 0, 1, 3, 1);\par
  129     button = gtk_button_new_with_label("ATUALIZAR IMAGEM");\par
  130     gtk_grid_attach(GTK_GRID(grid), button, 0, 3, 3, 1);\par
  131 \par
  132     scrolled_window = gtk_scrolled_window_new(NULL, NULL);\par
  133     gtk_scrolled_window_set_policy(GTK_SCROLLED_WINDOW(scrolled_window), GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);\par
  134     gtk_scrolled_window_set_min_content_height(GTK_SCROLLED_WINDOW(scrolled_window), 600);\par
  135     gtk_scrolled_window_set_min_content_width(GTK_SCROLLED_WINDOW(scrolled_window), 400);\par
  136     gtk_container_add(GTK_CONTAINER(scrolled_window), image);\par
  137     gtk_container_set_border_width(GTK_CONTAINER(scrolled_window), 5);\par
  138 \par
  139     frame = gtk_frame_new("Imagem: ");\par
  140     gtk_container_add(GTK_CONTAINER(frame), scrolled_window);\par
  141 \par
  142     box = gtk_box_new(0, 1);\par
  143     gtk_box_set_spacing(GTK_BOX(box), 10);\par
  144     gtk_box_pack_start(GTK_BOX(box), frame, 1, 1, 1);\par
  145 \par
  146     frame = gtk_frame_new("Configura\'E7\'F5es: ");\par
  147     gtk_frame_set_label_align(GTK_FRAME(frame), 0.5, 0.5);\par
  148     gtk_container_add(GTK_CONTAINER(frame), grid);\par
  149 \par
  150     gtk_box_pack_start(GTK_BOX(box), frame, 0, 0, 1);\par
  151 \par
  152     gtk_container_add(GTK_CONTAINER(window), box);\par
  153 \par
  154     g_signal_connect(button, "clicked", G_CALLBACK(button_atualizar), NULL);\par
  155 \par
  156     gtk_widget_show_all(window);\par
  157     gtk_main();\par
  158 \par
  159     return 0;\par
  160 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v box\:main.c}
{\xe \v main.c\:box}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GtkWidget * box}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 8 do arquivo main.c.}\par
}
{\xe \v buffer\:main.c}
{\xe \v main.c\:buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GtkTextBuffer* buffer}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 12 do arquivo main.c.}\par
}
{\xe \v button\:main.c}
{\xe \v main.c\:button}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GtkWidget * button}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 8 do arquivo main.c.}\par
}
{\xe \v end\:main.c}
{\xe \v main.c\:end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GtkTextIter end}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 13 do arquivo main.c.}\par
}
{\xe \v entry\:main.c}
{\xe \v main.c\:entry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GtkWidget * entry}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 8 do arquivo main.c.}\par
}
{\xe \v entry_text\:main.c}
{\xe \v main.c\:entry_text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const gchar* entry_text}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 9 do arquivo main.c.}\par
}
{\xe \v frame\:main.c}
{\xe \v main.c\:frame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GtkWidget * frame}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 8 do arquivo main.c.}\par
}
{\xe \v grid\:main.c}
{\xe \v main.c\:grid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GtkWidget * grid}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 8 do arquivo main.c.}\par
}
{\xe \v image\:main.c}
{\xe \v main.c\:image}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GtkWidget * image}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 8 do arquivo main.c.}\par
}
{\xe \v iter\:main.c}
{\xe \v main.c\:iter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GtkTextIter iter}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 14 do arquivo main.c.}\par
}
{\xe \v label\:main.c}
{\xe \v main.c\:label}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GtkWidget * label}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 8 do arquivo main.c.}\par
}
{\xe \v nome_espec\:main.c}
{\xe \v main.c\:nome_espec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char nome_espec[50]}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 16 do arquivo main.c.}\par
}
{\xe \v nome_image\:main.c}
{\xe \v main.c\:nome_image}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char nome_image[50] ="imagem.ppm"}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 17 do arquivo main.c.}\par
}
{\xe \v p\:main.c}
{\xe \v main.c\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pixel}** p}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 18 do arquivo main.c.}\par
}
{\xe \v scrolled_window\:main.c}
{\xe \v main.c\:scrolled_window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GtkWidget * scrolled_window}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 8 do arquivo main.c.}\par
}
{\xe \v start\:main.c}
{\xe \v main.c\:start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GtkTextIter start}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 13 do arquivo main.c.}\par
}
{\xe \v txt_view\:main.c}
{\xe \v main.c\:txt_view}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GtkWidget * txt_view}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 8 do arquivo main.c.}\par
}
{\xe \v v_texto\:main.c}
{\xe \v main.c\:v_texto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
gchar* v_texto}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 10 do arquivo main.c.}\par
}
{\xe \v window\:main.c}
{\xe \v main.c\:window}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GtkWidget* window}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha 8 do arquivo main.c.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo structs.h\par \pard\plain 
{\tc\tcl2 \v structs.h}
{\xe \v structs.h}
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Estruturas de Dados\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ponto}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b reta}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b pixel}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b polygons_p}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b espec_s}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de Tipos\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b polygons_p} {\b polygons}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b espec_s} {\b espec}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Bool} \{ {\b false} = 0, 
{\b true} = 1
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es dos tipos\par
\pard\plain 
{\xe \v espec\:structs.h}
{\xe \v structs.h\:espec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b espec_s}  {\b espec}}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v polygons\:structs.h}
{\xe \v structs.h\:polygons}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b polygons_p} {\b polygons}}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 
{\xe \v Bool\:structs.h}
{\xe \v structs.h\:Bool}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Bool}}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Valores de enumera\'E7\'F5es:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v false\:structs.h}
{\xe \v structs.h\:false}
{\qr false{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
\cell }{\cell }{\row }
{\xe \v true\:structs.h}
{\xe \v structs.h\:true}
{\qr true{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
\cell }{\cell }{\row }
}
\par
{
Defini\'E7\'E3o na linha 24 do arquivo structs.h.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    25 \{\par
   26     false = 0,\par
   27     true = 1\par
   28 \};\par
}
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'CDndice\par 
\pard\plain 
{\tc \v \'CDndice}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}